{
  "_args": [
    [
      {
        "raw": "intl-format-cache@^2.0.5",
        "scope": null,
        "escapedName": "intl-format-cache",
        "name": "intl-format-cache",
        "rawSpec": "^2.0.5",
        "spec": ">=2.0.5 <3.0.0",
        "type": "range"
      },
      "/Users/joshuajohnson/99/node_modules/react-intl"
    ]
  ],
  "_from": "intl-format-cache@>=2.0.5 <3.0.0",
  "_id": "intl-format-cache@2.0.5",
  "_inCache": true,
  "_location": "/intl-format-cache",
  "_nodeVersion": "5.0.0",
  "_npmUser": {
    "name": "ericf",
    "email": "eferraiuolo@gmail.com"
  },
  "_npmVersion": "3.3.6",
  "_phantomChildren": {},
  "_requested": {
    "raw": "intl-format-cache@^2.0.5",
    "scope": null,
    "escapedName": "intl-format-cache",
    "name": "intl-format-cache",
    "rawSpec": "^2.0.5",
    "spec": ">=2.0.5 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/react-intl"
  ],
  "_resolved": "https://registry.npmjs.org/intl-format-cache/-/intl-format-cache-2.0.5.tgz",
  "_shasum": "b484cefcb9353f374f25de389a3ceea1af18d7c9",
  "_shrinkwrap": null,
  "_spec": "intl-format-cache@^2.0.5",
  "_where": "/Users/joshuajohnson/99/node_modules/react-intl",
  "author": {
    "name": "Eric Ferraiuolo",
    "email": "eferraiuolo@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/yahoo/intl-format-cache/issues"
  },
  "dependencies": {},
  "description": "A memoizer factory for Intl format constructors.",
  "devDependencies": {
    "browserify": "^12.0.1",
    "expect": "^1.13.0",
    "grunt": "^0.4.5",
    "grunt-bundle-jsnext-lib": "^0.5.0",
    "grunt-cli": "^0.1.13",
    "grunt-contrib-clean": "^0.6.0",
    "grunt-contrib-connect": "^0.11.2",
    "grunt-contrib-copy": "^0.7.0",
    "grunt-saucelabs": "^8.6.1",
    "intl": "^1.0.1",
    "intl-messageformat": "^1.2.0",
    "intl-relativeformat": "^1.2.0",
    "mocha": "^2.3.4"
  },
  "directories": {},
  "dist": {
    "shasum": "b484cefcb9353f374f25de389a3ceea1af18d7c9",
    "tarball": "https://registry.npmjs.org/intl-format-cache/-/intl-format-cache-2.0.5.tgz"
  },
  "gitHead": "1f90b7a5fbfe086877264418f26015b352addd01",
  "homepage": "https://github.com/yahoo/intl-format-cache",
  "jsnext:main": "src/memoizer.js",
  "keywords": [
    "intl",
    "i18n"
  ],
  "license": "BSD-3-Clause",
  "main": "index.js",
  "maintainers": [
    {
      "name": "ericf",
      "email": "eferraiuolo@gmail.com"
    },
    {
      "name": "caridy",
      "email": "caridy@gmail.com"
    }
  ],
  "name": "intl-format-cache",
  "optionalDependencies": {},
  "readme": "Intl Format Cache\n=================\n\nA memoizer factory for Intl format constructors.\n\n[![npm Version][npm-badge]][npm]\n[![Build Status][travis-badge]][travis]\n[![Dependency Status][david-badge]][david]\n\n\nOverview\n--------\n\nThis is a helper package used within [Yahoo's FormatJS suite][FormatJS]. It provides a factory for creating memoizers of [`Intl`][Intl] format constructors: [`Intl.NumberFormat`][Intl-NF], [`Intl.DateTimeFormat`][Intl-DTF], [`IntlMessageFormat`][Intl-MF], and [`IntlRelativeFormat`][Intl-RF].\n\nCreating instances of these `Intl` formats is an expensive operation, and the APIs are designed such that developers should re-use format instances instead of always creating new ones. This package is simply to make it easier to create a cache of format instances of a particular type to aid in their reuse.\n\nUnder the hood, this package creates a cache key based on the arguments passed to the memoized constructor (it will even order the keys of the `options` argument) it uses `JSON.stringify()` to create the string key. If the runtime does not have built-in or polyfilled support for `JSON`, new instances will be created each time the memoizer function is called.\n\n\nUsage\n-----\n\nThis package works as an ES6 or Node.js module, in either case it has a single default export function; e.g.:\n\n```js\n// In an ES6 module.\nimport memoizeFormatConstructor from 'intl-format-cache';\n```\n\n```js\n// In Node.\nvar memoizeFormatConstructor = require('intl-format-cache');\n```\n\nThis default export is a factory function which can be passed an `Intl` format constructor and it will return a memoizer that will create or reuse an `Intl` format instance and return it.\n\n```js\nvar getNumberFormat = memoizeFormatConstructor(Intl.NumberFormat);\n\nvar nf1 = getNumberFormat('en');\nvar nf2 = getNumberFormat('en');\nvar nf3 = getNumberFormat('fr');\n\nconsole.log(nf1 === nf2); // => true\nconsole.log(nf1 === nf3); // => false\n\nconsole.log(nf1.format(1000)); // => \"1,000\"\nconsole.log(nf3.format(1000)); // => \"1 000\"\n```\n\n\nLicense\n-------\n\nThis software is free to use under the Yahoo! Inc. BSD license.\nSee the [LICENSE file][LICENSE] for license text and copyright information.\n\n\n[npm]: https://www.npmjs.org/package/intl-format-cache\n[npm-badge]: https://img.shields.io/npm/v/intl-format-cache.svg?style=flat-square\n[david]: https://david-dm.org/yahoo/intl-format-cache\n[david-badge]: https://img.shields.io/david/yahoo/intl-format-cache.svg?style=flat-square\n[travis]: https://travis-ci.org/yahoo/intl-format-cache\n[travis-badge]: https://img.shields.io/travis/yahoo/intl-format-cache/master.svg?style=flat-square\n[Intl]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl\n[Intl-NF]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NumberFormat\n[Intl-DTF]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DateTimeFormat\n[Intl-MF]: https://github.com/yahoo/intl-messageformat\n[Intl-RF]: https://github.com/yahoo/intl-relativeformat\n[FormatJS]: http://formatjs.io/\n[LICENSE]: https://github.com/yahoo/intl-format-cache/blob/master/LICENSE\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/yahoo/intl-format-cache.git"
  },
  "scripts": {
    "browserify": "browserify index.js -s memoizeFormatConstructor > tmp/intl-format-cache.js",
    "prepublish": "grunt",
    "test": "npm run test:unit",
    "test:saucelabs": "npm run browserify && grunt saucelabs",
    "test:unit": "mocha --require test/setup/node-unit --recursive test/unit/",
    "travis": "npm test && npm run test:saucelabs"
  },
  "version": "2.0.5"
}
